{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","message","createElement","BASE_URL","getPhones","url","fetch","then","response","ok","json","Promise","reject","Error","status","getPhonesDetails","arrId","resolve","phonesDetails","id","respons","phone","push","length","catch","error","phones","phohesIdArr","hasOwnProperty","arr","list","innerHTML","name","insertAdjacentElement","append","setTimeout"],"mappings":"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","file":"main.bd01086a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst message = document.createElement('div');\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nfunction getPhones(url) {\n  return fetch(`${BASE_URL}${url}.json`)\n    .then((response) => {\n      if (!response.ok) {\n        return Promise.reject(new Error(`${response.status}`));\n      }\n\n      return response.json();\n    });\n}\n\nfunction getPhonesDetails(arrId, url) {\n  return new Promise((resolve, reject) => {\n    const phonesDetails = [];\n\n    for (const id of arrId) {\n      fetch(`${BASE_URL}${url}/${id}.json`)\n        .then(respons => respons.json())\n        .then(phone => {\n          phonesDetails.push(phone);\n\n          if (phonesDetails.length === arrId.length) {\n            resolve(phonesDetails);\n          };\n        })\n        .catch(error => {\n          reject(new Error(`что-то пошло не так ${error}`));\n        });\n    }\n  });\n}\n\ngetPhones('/phones')\n  .then((phones) => {\n    const phohesIdArr = [];\n\n    for (const phone of phones) {\n      if (phone.hasOwnProperty('id')) {\n        phohesIdArr.push(phone.id);\n      }\n    }\n\n    getPhonesDetails(phohesIdArr, '/phones')\n      .then(arr => {\n        const list = document.createElement('ol');\n\n        list.innerHTML = ``;\n\n        for (const phone of arr) {\n          list.innerHTML += `\n            <li>${phone.name}</li>\n          `;\n        }\n\n        body.insertAdjacentElement('afterbegin', list);\n      })\n      .catch(error => {\n        message.innerHTML = `\n        <h1>ERROR</h1>\n        <h2>${error}</h2>\n        `;\n        body.append(message);\n      });\n  })\n  .catch((error) => {\n    setTimeout(() => {\n      message.innerHTML = `\n      <h1>ERROR</h1>\n      <h2>${error}</h2>\n      `;\n      body.append(message);\n    }, 5000);\n  });\n"]}